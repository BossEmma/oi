# Generated by Django 3.2 on 2025-02-19 08:13

import Green.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('value', models.DecimalField(decimal_places=6, max_digits=999)),
                ('mine_rate', models.DecimalField(decimal_places=2, max_digits=999)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='CopyTrader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('win_rate', models.DecimalField(decimal_places=2, max_digits=999)),
                ('profit_share', models.PositiveIntegerField()),
                ('asset_under_management', models.DecimalField(decimal_places=2, max_digits=999)),
                ('days', models.PositiveIntegerField()),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='DepositCoin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qrcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('pair', models.CharField(default='wallet Address', max_length=500)),
                ('Coin', models.CharField(choices=[('SOL Solana Solana', 'SOL Solana Solana'), ('USDT Tether TRC20', 'USDT Tether TRC20'), ('LTC Litecoin', 'LTC Litecoin'), ('SHIB Shiba ERC20', 'SHIB Shiba ERC20'), ('ETH Ethereum ERC20', 'ETH Ethereum ERC20'), ('DOGE Dogecoin', 'DOGE Dogecoin'), ('BNB Binance coin Binance Smart Chain', 'BNB Binance coin Binance Smart Chain'), ('BTC Bitcoin ', 'BTC Bitcoin ')], default=1, max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('symbol', models.CharField(max_length=200)),
                ('form', models.CharField(choices=[('CRYPTO', 'CRYPTO'), ('STOCKS', 'STOCKS'), ('CURRENCIES', 'CURRENCIES'), ('INDICES', 'INDICES')], max_length=200)),
                ('value', models.DecimalField(decimal_places=6, max_digits=999)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Withdraw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammount', models.DecimalField(decimal_places=2, max_digits=999, validators=[django.core.validators.MinValueValidator(500.0)])),
                ('fromacc', models.CharField(choices=[('TRADING BALANCE', 'TRADING BALANCE'), ('BITCOIN MINIG', 'BITCOIN MINIG'), ('DOGECOIN MINING', 'DOGECOIN MINING'), ('ETHEREUM MINING', 'ETHEREUM MINING'), ('BINANCE COIN MINING', 'BINANCE COIN MINING'), ('COSMO (ATOM) MINING', 'COSMO (ATOM) MINING')], default=1, max_length=100)),
                ('wallet', models.CharField(blank=True, choices=[('SOL Solana Solana', 'SOL Solana Solana'), ('USDT Tether TRC20', 'USDT Tether TRC20'), ('LTC Litecoin', 'LTC Litecoin'), ('SHIB Shiba ERC20', 'SHIB Shiba ERC20'), ('ETH Ethereum ERC20', 'ETH Ethereum ERC20'), ('DOGE Dogecoin', 'DOGE Dogecoin'), ('BNB Binance coin Binance Smart Chain', 'BNB Binance coin Binance Smart Chain'), ('BTC Bitcoin ', 'BTC Bitcoin ')], default=1, max_length=200, null=True)),
                ('account_name', models.CharField(blank=True, default='None', max_length=200, null=True)),
                ('account_number', models.CharField(blank=True, default='None', max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('paypal', models.EmailField(blank=True, default='none@ultragreen.com', max_length=254, null=True)),
                ('bank_name', models.CharField(blank=True, default='None', max_length=200, null=True)),
                ('cashapp', models.CharField(blank=True, default='None', max_length=200, null=True)),
                ('status', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('symbol', models.CharField(max_length=200)),
                ('value', models.DecimalField(decimal_places=6, max_digits=999)),
                ('form', models.CharField(choices=[('CRYPTO', 'CRYPTO'), ('STOCKS', 'STOCKS'), ('CURRENCIES', 'CURRENCIES'), ('INDICES', 'INDICES')], max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='WalletBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trading_balance', models.DecimalField(decimal_places=2, max_digits=999)),
                ('bitcoin_mining', models.DecimalField(decimal_places=6, max_digits=999)),
                ('ethereum_mining', models.DecimalField(decimal_places=6, max_digits=999)),
                ('dogecoin_mining', models.DecimalField(decimal_places=6, max_digits=999)),
                ('binance_coin_mining', models.DecimalField(decimal_places=6, max_digits=999)),
                ('cosmos_mining', models.DecimalField(decimal_places=6, max_digits=999)),
                ('verified', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('birth', models.DateField(validators=[Green.models.validate_age])),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('EUR', 'EUR'), ('CAD', 'CAD'), ('AUD', 'AUD'), ('GBP', 'GBP')], max_length=50)),
                ('email', models.EmailField(blank=True, default='test@gmail.com', max_length=254, null=True)),
                ('contact', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('nationality', django_countries.fields.CountryField(max_length=2)),
                ('address', models.CharField(help_text='describe your location', max_length=70)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(auto_now_add=True)),
                ('otp', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('verified', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-time',),
            },
        ),
        migrations.CreateModel(
            name='OpenClosedTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammount', models.DecimalField(decimal_places=2, max_digits=999)),
                ('up', models.DecimalField(decimal_places=2, max_digits=999)),
                ('down', models.DecimalField(decimal_places=2, max_digits=999)),
                ('loss_or_gain', models.CharField(choices=[('LOSS TRADE', 'LOSS TRADE'), ('GAIN TRADE', 'GAIN TRADE')], default=1, max_length=500)),
                ('trade_type', models.CharField(choices=[('OPEN TRADE', 'OPEN TRADE'), ('CLOSED TRADE', 'CLOSED TRADE')], default=1, max_length=500)),
                ('pair', models.CharField(default='BTCUSD', max_length=500)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ammount', models.DecimalField(decimal_places=2, max_digits=999, validators=[django.core.validators.MinValueValidator(500.0)])),
                ('fund', models.CharField(choices=[('TRADING BALANCE', 'TRADING BALANCE'), ('BITCOIN MINIG', 'BITCOIN MINIG'), ('DOGECOIN MINING', 'DOGECOIN MINING'), ('ETHEREUM MINING', 'ETHEREUM MINING'), ('BINANCE COIN MINING', 'BINANCE COIN MINING'), ('COSMO (ATOM) MINING', 'COSMO (ATOM) MINING')], default=1, max_length=100)),
                ('pay_in', models.CharField(choices=[('SOL Solana Solana', 'SOL Solana Solana'), ('USDT Tether TRC20', 'USDT Tether TRC20'), ('LTC Litecoin', 'LTC Litecoin'), ('SHIB Shiba ERC20', 'SHIB Shiba ERC20'), ('ETH Ethereum ERC20', 'ETH Ethereum ERC20'), ('DOGE Dogecoin', 'DOGE Dogecoin'), ('BNB Binance coin Binance Smart Chain', 'BNB Binance coin Binance Smart Chain'), ('BTC Bitcoin ', 'BTC Bitcoin ')], default=1, max_length=200)),
                ('status', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='CopiedTrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('win_rate', models.DecimalField(decimal_places=2, max_digits=999)),
                ('profit_share', models.PositiveIntegerField(default=40)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
    ]
